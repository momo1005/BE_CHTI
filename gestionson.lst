


ARM Macro Assembler    Page 1 


    1 00000000                 PRESERVE8
    2 00000000                 THUMB
    3 00000000         
    4 00000000         
    5 00000000                 IMPORT           LongueurSon
    6 00000000                 IMPORT           PeriodeSonMicroSec
    7 00000000                 IMPORT           Son
    8 00000000                 IMPORT           PWM_Set_Value_TIM3_Ch3
    9 00000000         ; ====================== zone de réservation de données,
                         ======================================
   10 00000000         ;Section RAM (read only) :
   11 00000000                 area             mesdata,data,readonly
   12 00000000         
   13 00000000         
   14 00000000         
   15 00000000         ;Section RAM (read write):
   16 00000000                 area             maram,data,readwrite
   17 00000000         
   18 00000000 00 00   SortieSon
                               dcw              0
   19 00000002                 EXPORT           SortieSon
   20 00000002         
   21 00000002 00 00 00000000 
                       index   dcd              0           ;index de tableau
   22 00000008                 EXPORT           index
   23 00000008         
   24 00000008 000002CF 
                       auxmul  dcd              719
   25 0000000C 0000FFFF 
                       auxdiv  dcd              65535
   26 00000010         
   27 00000010         ;dcd = 32 bit //commence par l'octet de poids faible car
                        little indian
   28 00000010         ;32 bit = 4 tiroire dans la memoire de 8bits
   29 00000010         ;dcw 16bit
   30 00000010         ;dcb 8 bits
   31 00000010         
   32 00000010         
   33 00000010         ; ======================================================
                       =========================================
   34 00000010         
   35 00000010         
   36 00000010         ;Section ROM code (read only) :  
   37 00000010                 area             moncode,code,readonly
   38 00000000         
   39 00000000                 EXPORT           CallbackSon
   40 00000000         ; écrire le code ici  
   41 00000000         
   42 00000000         ;void CallbackSon(void)
   43 00000000         CallbackSon
                               proc
   44 00000000         ;son = table d'échantillon
   45 00000000         ;A chaque entrée dans le callback, lire l'échantillon à 
                       traiter (echantillon courant)  
   46 00000000         ;puis mettre à jour un index de table
   47 00000000         
   48 00000000         ;on doit verifier que index < longueur son (max du table
                       au)
   49 00000000         ; si on a atteint le max on incremente plus index (on va



ARM Macro Assembler    Page 2 


                        toujours jouer le meme echantillon - fin du son car plu
                       s de vibration différente)
   50 00000000 B500            push             {lr}
   51 00000002         
   52 00000002 4919            ldr              R1,=Son     ;adresse de son dan
                                                            s R1 ;
   53 00000004 4A19            ldr              R2,=index   ;adresse de index d
                                                            ans r2
   54 00000006 481A            ldr              R0,=SortieSon ; adresse de Sort
                                                            ieSon dans R0
   55 00000008         
   56 00000008 B410            push             {R4}        ;met dans la pile l
                                                            'adresse de l'index
                                                            
   57 0000000A 6814            ldr              R4,[R2]     ;valeur de index da
                                                            ns r4
   58 0000000C         
   59 0000000C B420            push             {R5}
   60 0000000E 4D19            ldr              R5,=LongueurSon ;adresse de Lon
                                                            geur Son dans R5
   61 00000010 682D            ldr              R5,[R5]     ; Valeur de Longeur
                                                            Son dans r5
   62 00000012         
   63 00000012 B440            push             {r6}        ;on stock dans un r
                                                            egistre la valeur d
                                                            e
   64 00000014 4E18            ldr              R6,=auxmul
   65 00000016 6836            ldr              R6,[R6]
   66 00000018 B480            push             {r7}
   67 0000001A 4F18            ldr              R7,=auxdiv
   68 0000001C 683F            ldr              R7,[R7]
   69 0000001E         
   70 0000001E 42AC            cmp              R4, R5      ; Z set to 1 when e
                                                            qual, 0 if not equa
                                                            l on compare la val
                                                            eur de l'index avec
                                                             la valeur de Longe
                                                            ur son
   71 00000020 D00C            beq              SINON       ; on saute a sinon 
                                                            si on a fini de par
                                                            courir le tableau
   72 00000022         
   73 00000022         ALORS
   74 00000022         
   75 00000022 F931 3014       ldrsh            R3, [R1,R4,LSL #1] ; on met dan
                                                            s r3 la valeur de l
                                                            'echantillon couran
                                                            t
   76 00000026         ;ldrsh pour les nombre signé (s) et avoir juste 16 bits(
                       h)
   77 00000026         
   78 00000026 F503 4300       add              R3, #32768
   79 0000002A FB03 F306       mul              R3, R3, R6
   80 0000002E FB93 F3F7       sdiv             R3,R3,R7
   81 00000032         
   82 00000032 6003            str              R3, [R0]    ; on met la valeur 
                                                            de l'echantillon da
                                                            ns sortie son
   83 00000034         



ARM Macro Assembler    Page 3 


   84 00000034 F104 0401       add              R4,#1       ; on indente la val
                                                            eur de l'index
   85 00000038 6014            str              R4, [R2]    ; on met en memoire
                                                             la nouvelle valeur
                                                             de l'index
   86 0000003A         
   87 0000003A E008            b                FINSI
   88 0000003C         
   89 0000003C         
   90 0000003C         SINON
   91 0000003C F931 3014       ldrsh            R3, [R1,R4,LSL #1] ; on met dan
                                                            s r3 la valeur de l
                                                            'echantillon couran
                                                            t
   92 00000040         
   93 00000040 F503 4300       add              R3,#32768
   94 00000044 FB03 F306       mul              R3,R3, R6
   95 00000048 FB93 F3F7       sdiv             R3,R3,R7
   96 0000004C         
   97 0000004C 6003            str              R3, [R0]    ; on met la valeur 
                                                            de l'echantillon da
                                                            ns sortie son
   98 0000004E         
   99 0000004E         
  100 0000004E         FINSI
  101 0000004E         
  102 0000004E B401            push             {R0}
  103 00000050 4618            mov              R0, R3      ;car r0 = registre 
                                                            de base pour les pa
                                                            rametres donc on lu
                                                            i donne la valeur d
                                                            e sortie son
  104 00000052 F7FF FFFE       bl               PWM_Set_Value_TIM3_Ch3
  105 00000056 BC01            pop{R0}
  106 00000058         
  107 00000058 BC80            pop{r7}
  108 0000005A BC40            pop{r6}
  109 0000005C BC20            pop{r5}                      ;besoin de remettre
                                                             la valeur de base
  110 0000005E BC10            pop{r4}                      ; besoin de remettr
                                                            e la valeur de base
                                                            
  111 00000060         
  112 00000060         
  113 00000060 F85D EB04       pop              {lr}
  114 00000064 4770            bx               lr
  115 00000066         
  116 00000066                 endp
  117 00000066                 END
              00 00 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\obj\gestionson.d -o.\obj\gestionson.o -I.\RTE\_CibleSondeKEIL -I
C:\Programdata\Keil\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Programda
ta\Keil\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include --predefine="__EVAL S



ARM Macro Assembler    Page 4 


ETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 530"
 --predefine="_RTE_ SETA 1" --predefine="STM32F10X_MD SETA 1" --predefine="_RTE
_ SETA 1" --list=gestionson.lst Src\GestionSon.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

mesdata 00000000

Symbol: mesdata
   Definitions
      At line 11 in file Src\GestionSon.s
   Uses
      None
Comment: mesdata unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

SortieSon 00000000

Symbol: SortieSon
   Definitions
      At line 18 in file Src\GestionSon.s
   Uses
      At line 19 in file Src\GestionSon.s
      At line 54 in file Src\GestionSon.s

auxdiv 0000000C

Symbol: auxdiv
   Definitions
      At line 25 in file Src\GestionSon.s
   Uses
      At line 67 in file Src\GestionSon.s
Comment: auxdiv used once
auxmul 00000008

Symbol: auxmul
   Definitions
      At line 24 in file Src\GestionSon.s
   Uses
      At line 64 in file Src\GestionSon.s
Comment: auxmul used once
index 00000004

Symbol: index
   Definitions
      At line 21 in file Src\GestionSon.s
   Uses
      At line 22 in file Src\GestionSon.s
      At line 53 in file Src\GestionSon.s

maram 00000000

Symbol: maram
   Definitions
      At line 16 in file Src\GestionSon.s
   Uses
      None
Comment: maram unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ALORS 00000022

Symbol: ALORS
   Definitions
      At line 73 in file Src\GestionSon.s
   Uses
      None
Comment: ALORS unused
CallbackSon 00000000

Symbol: CallbackSon
   Definitions
      At line 43 in file Src\GestionSon.s
   Uses
      At line 39 in file Src\GestionSon.s
Comment: CallbackSon used once
FINSI 0000004E

Symbol: FINSI
   Definitions
      At line 100 in file Src\GestionSon.s
   Uses
      At line 87 in file Src\GestionSon.s
Comment: FINSI used once
SINON 0000003C

Symbol: SINON
   Definitions
      At line 90 in file Src\GestionSon.s
   Uses
      At line 71 in file Src\GestionSon.s
Comment: SINON used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 37 in file Src\GestionSon.s
   Uses
      None
Comment: moncode unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LongueurSon 00000000

Symbol: LongueurSon
   Definitions
      At line 5 in file Src\GestionSon.s
   Uses
      At line 60 in file Src\GestionSon.s
Comment: LongueurSon used once
PWM_Set_Value_TIM3_Ch3 00000000

Symbol: PWM_Set_Value_TIM3_Ch3
   Definitions
      At line 8 in file Src\GestionSon.s
   Uses
      At line 104 in file Src\GestionSon.s
Comment: PWM_Set_Value_TIM3_Ch3 used once
PeriodeSonMicroSec 00000000

Symbol: PeriodeSonMicroSec
   Definitions
      At line 6 in file Src\GestionSon.s
   Uses
      None
Comment: PeriodeSonMicroSec unused
Son 00000000

Symbol: Son
   Definitions
      At line 7 in file Src\GestionSon.s
   Uses
      At line 52 in file Src\GestionSon.s
Comment: Son used once
4 symbols
352 symbols in table
